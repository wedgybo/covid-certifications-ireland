{
    "openapi": "3.0.2",
    "info": {
        "title": "Negative test certificate API",
        "description": "API for generating negative certificates for covid tests",
        "version": "0.0.1"
    },
    "paths": {
        "/token/": {
            "post": {
                "summary": "Login For Access Token",
                "description": "Retrieve an Access Token of type Bearer to access the API endpoints.\n\nTo access the API enpoints, the client must send the access token in the Authorization header when making requests:\n\n    Authorization: Bearer <access_token>\n\nMore info in [MDN Web Docs: Authorization](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization).",
                "operationId": "login_for_access_token_token__post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_for_access_token_token__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/covid-test-certificate/": {
            "post": {
                "summary": "Create Negative Covid Certificate",
                "description": "Create a government signed negative test covid certificate",
                "operationId": "create_negative_covid_certificate_covid_test_certificate__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTestCertificate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertificateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/covid-vaccine-certificate/": {
            "post": {
                "summary": "Create Covid Vaccine Certificate",
                "operationId": "create_covid_vaccine_certificate_covid_vaccine_certificate__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VaccineQRCode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HC1CertificateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/covid-recovery-certificate/": {
            "post": {
                "summary": "Create Covid Recovery Certificate",
                "operationId": "create_covid_recovery_certificate_covid_recovery_certificate__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecoveryQRCode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HC1CertificateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/auth": {
            "get": {
                "summary": "Auth Check",
                "operationId": "auth_check_auth_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Auth": []
                    }
                ]
            }
        },
        "/health-check/": {
            "get": {
                "summary": "Health Check",
                "operationId": "health_check_health_check__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_login_for_access_token_token__post": {
                "title": "Body_login_for_access_token_token__post",
                "required": [
                    "client_id",
                    "client_secret"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "client_secret": {
                        "title": "Client Secret",
                        "type": "string"
                    }
                }
            },
            "CertificateResponse": {
                "title": "CertificateResponse",
                "required": [
                    "unique_certificate_identifier",
                    "report_html"
                ],
                "type": "object",
                "properties": {
                    "unique_certificate_identifier": {
                        "title": "Unique Certificate Identifier",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Unique identifier for this certificate, UVCI",
                        "example": "IE:123:TBA"
                    },
                    "report_html": {
                        "title": "Report HTML",
                        "type": "string",
                        "description": "Standalone HTML representation of certificate",
                        "example": "<h1>Cert</h1>..."
                    }
                }
            },
            "CreateTestCertificate": {
                "title": "CreateTestCertificate",
                "required": [
                    "surname",
                    "forename",
                    "date_of_birth",
                    "test_type",
                    "test_result",
                    "sample_collection_time",
                    "test_centre",
                    "sample_id"
                ],
                "type": "object",
                "properties": {
                    "surname": {
                        "title": "Surname",
                        "type": "string",
                        "description": "Surname(s) of person tested",
                        "example": "Murphy"
                    },
                    "forename": {
                        "title": "Forename",
                        "type": "string",
                        "description": "The forename(s) of the person addressed in certificate",
                        "example": "Joseph"
                    },
                    "date_of_birth": {
                        "title": "Date Of Birth",
                        "pattern": "^((19|20)\\d\\d(-\\d\\d){0,2}){0,1}$",
                        "type": "string",
                        "description": "Date of birth of person in certificate, ISO 8601 range",
                        "example": "1979-04-13"
                    },
                    "test_type": {
                        "title": "Test Type",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/test-type"
                            }
                        ],
                        "description": "The type of test performed<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>LP6464-4</td><td>Nucleic acid amplification with probe detection</td></tr><tr><td>LP217198-3</td><td>Rapid immunoassay</td></tr></table>",
                        "example": "LP6464-4",
                        "examples": [
                            "LP6464-4",
                            "LP217198-3"
                        ]
                    },
                    "test_result": {
                        "title": "Result of the covid test",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResultEnum"
                            }
                        ],
                        "description": "Positivity result of the covid test",
                        "example": "negative"
                    },
                    "naa_test_name": {
                        "title": "NAA test name",
                        "maxLength": 80,
                        "type": "string",
                        "description": "NAA test name"
                    },
                    "test_manufacturer": {
                        "title": "Test Manufacturer",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/test-manf"
                            }
                        ],
                        "description": "RAT Test name and manufacturer<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>308</td><td>PCL Inc, PCL COVID19 Ag Rapid FIA</td></tr><tr><td>344</td><td>SD BIOSENSOR Inc, STANDARD F COVID-19 Ag FIA</td></tr><tr><td>345</td><td>SD BIOSENSOR Inc, STANDARD Q COVID-19 Ag Test</td></tr><tr><td>768</td><td>ArcDia International Ltd, mariPOC SARS-CoV-2</td></tr><tr><td>770</td><td>Assure Tech. (Hangzhou) Co., Ltd, ECOTEST COVID-19 Antigen Rapid Test Device</td></tr><tr><td>1065</td><td>Becton Dickinson, BD Veritor™ System for Rapid Detection of SARS CoV 2</td></tr><tr><td>1097</td><td>Quidel Corporation, Sofia SARS Antigen FIA</td></tr><tr><td>1114</td><td>Sugentech, Inc, SGTi-flex COVID-19 Ag</td></tr><tr><td>1144</td><td>Green Cross Medical Science Corp., GENEDIA W COVID-19 Ag</td></tr><tr><td>1162</td><td>Nal von minden GmbH, NADAL COVID-19 Ag Test</td></tr><tr><td>1173</td><td>CerTest Biotec, CerTest SARS-CoV-2 Card test</td></tr><tr><td>1178</td><td>Shenzhen Microprofit Biotech Co., Ltd, SARS-CoV-2 Spike Protein Test Kit (Colloidal Gold Chromatographic Immunoassay)</td></tr><tr><td>1180</td><td>MEDsan GmbH, MEDsan SARS-CoV-2 Antigen Rapid Test</td></tr><tr><td>1190</td><td>möLab, mö-screen Corona Antigen Test</td></tr><tr><td>1197</td><td>Goldsite Diagnostics Inc, SARS-CoV-2 Antigen Kit (Colloidal Gold)</td></tr><tr><td>1199</td><td>Oncosem Onkolojik Sistemler San. ve Tic. A.S., CAT</td></tr><tr><td>1201</td><td>ScheBo Biotech AG, ScheBo SARS CoV-2 Quick Antigen</td></tr><tr><td>1215</td><td>Hangzhou Laihe Biotech Co., Ltd, LYHER Novel Coronavirus (COVID-19) Antigen Test Kit(Colloidal Gold)</td></tr><tr><td>1216</td><td>Guangdong Longsee Biomedical Co., Ltd, COVID-19 Ag Rapid Test Kit (Immuno-Chromatography)</td></tr><tr><td>1218</td><td>Siemens Healthineers, CLINITEST Rapid Covid-19 Antigen Test</td></tr><tr><td>1223</td><td>BIOSYNEX S.A., BIOSYNEX COVID-19 Ag BSS</td></tr><tr><td>1225</td><td>DDS DIAGNOSTIC, Test Rapid Covid-19 Antigen (tampon nazofaringian)</td></tr><tr><td>1232</td><td>Abbott Rapid Diagnostics, Panbio Covid-19 Ag Rapid Test</td></tr><tr><td>1236</td><td>BTNX Inc, Rapid Response COVID-19 Antigen Rapid Test</td></tr><tr><td>1242</td><td>Bionote, Inc, NowCheck COVID-19 Ag Test</td></tr><tr><td>1243</td><td>Edinburgh Genetics Limited, ActivXpress+ COVID-19 Antigen Complete Testing Kit</td></tr><tr><td>1244</td><td>GenBody, Inc, Genbody COVID-19 Ag Test</td></tr><tr><td>1253</td><td>GenSure Biotech Inc, GenSure COVID-19 Antigen Rapid Kit</td></tr><tr><td>1257</td><td>Hangzhou AllTest Biotech Co., Ltd, COVID-19 Antigen Rapid Test</td></tr><tr><td>1263</td><td>Humasis, Humasis COVID-19 Ag Test</td></tr><tr><td>1266</td><td>Labnovation Technologies Inc, SARS-CoV-2 Antigen Rapid Test Kit</td></tr><tr><td>1267</td><td>LumiQuick Diagnostics Inc, QuickProfile COVID-19 Antigen Test</td></tr><tr><td>1268</td><td>LumiraDX, LumiraDx SARS-CoV-2 Ag Test</td></tr><tr><td>1271</td><td>Precision Biosensor, Inc, Exdia COVID-19 Ag</td></tr><tr><td>1278</td><td>Xiamen Boson Biotech Co. Ltd, Rapid SARS-CoV-2 Antigen Test Card</td></tr><tr><td>1286</td><td>BIOHIT HealthCare (Hefei) Co., Ltd, SARS-CoV-2 Antigen Rapid Test Kit (Fluorescence Immunochromatography)</td></tr><tr><td>1295</td><td>Zhejiang Anji Saianfu Biotech Co., Ltd, reOpenTest COVID-19 Antigen Rapid Test</td></tr><tr><td>1296</td><td>Zhejiang Anji Saianfu Biotech Co., Ltd, AndLucky COVID-19 Antigen Rapid Test</td></tr><tr><td>1304</td><td>AMEDA Labordiagnostik GmbH, AMP Rapid Test SARS-CoV-2 Ag</td></tr><tr><td>1319</td><td>SGA Medikal, V-Chek SARS-CoV-2 Ag Rapid Test Kit (Colloidal Gold)</td></tr><tr><td>1324</td><td>Guangzhou Decheng Biotechnology Co., LTD, V-CHEK, 2019-nCoV Ag Rapid Test Kit (Immunochromatography)</td></tr><tr><td>1331</td><td>Beijing Lepu Medical Technology Co., Ltd, SARS-CoV-2 Antigen Rapid Test Kit</td></tr><tr><td>1333</td><td>Joinstar Biomedical Technology Co., Ltd, COVID-19 Rapid Antigen Test (Colloidal Gold)</td></tr><tr><td>1341</td><td>Qingdao Hightop Biotech Co., Ltd, SARS-CoV-2 Antigen Rapid Test (Immunochromatography)</td></tr><tr><td>1343</td><td>Zhezhiang Orient Gene Biotech Co., Ltd, Coronavirus Ag Rapid Test Cassette (Swab)</td></tr><tr><td>1357</td><td>SGA Medikal, V-Chek SARS-CoV-2 Rapid Ag Test (colloidal gold)</td></tr><tr><td>1360</td><td>Guangdong Wesail Biotech Co., Ltd, COVID-19 Ag Test Kit</td></tr><tr><td>1363</td><td>Hangzhou Clongene Biotech Co., Ltd, Covid-19 Antigen Rapid Test Kit</td></tr><tr><td>1365</td><td>Hangzhou Clongene Biotech Co., Ltd, COVID-19/Influenza A+B Antigen Combo Rapid Test</td></tr><tr><td>1375</td><td>DIALAB GmbH, DIAQUICK COVID-19 Ag Cassette</td></tr><tr><td>1392</td><td>Hangzhou Testsea Biotechnology Co., Ltd, COVID-19 Antigen Test Cassette</td></tr><tr><td>1420</td><td>NanoEntek, FREND COVID-19 Ag</td></tr><tr><td>1437</td><td>Guangzhou Wondfo Biotech Co., Ltd, Wondfo 2019-nCoV Antigen Test (Lateral Flow Method)</td></tr><tr><td>1443</td><td>Vitrosens Biotechnology Co., Ltd, RapidFor SARS-CoV-2 Rapid Ag Test</td></tr><tr><td>1456</td><td>Xiamen Wiz Biotech Co., Ltd, SARS-CoV-2 Antigen Rapid Test</td></tr><tr><td>1457</td><td>Acon Biotech (Hangzhou) Co., Ltd, SARS-CoV-2 Antigen Rapid Test</td></tr><tr><td>1465</td><td>Triplex International Biosciences Co., Ltd, SARS-CoV-2 Antigen Rapid Test Kit</td></tr><tr><td>1466</td><td>TODA PHARMA, TODA CORONADIAG Ag</td></tr><tr><td>1468</td><td>ACON Laboratories, Inc, Flowflex SARS-CoV-2 Antigen rapid test</td></tr><tr><td>1481</td><td>MP Biomedicals, Rapid SARS-CoV-2 Antigen Test Card</td></tr><tr><td>1484</td><td>Beijing Wantai Biological Pharmacy Enterprise Co., Ltd, Wantai SARS-CoV-2 Ag Rapid Test (FIA)</td></tr><tr><td>1485</td><td>Beijing Wantai Biological Pharmacy Enterprise Co., Ltd, WANTAI SARS-CoV-2 Ag Rapid Test (Colloidal Gold)</td></tr><tr><td>1489</td><td>Safecare Biotech (Hangzhou) Co. Ltd, COVID-19 Antigen Rapid Test Kit (Swab)</td></tr><tr><td>1490</td><td>Safecare Biotech (Hangzhou) Co. Ltd, Multi-Respiratory Virus Antigen Test Kit(Swab)  (Influenza A+B/ COVID-19)</td></tr><tr><td>1494</td><td>BIOSYNEX S.A., BIOSYNEX COVID-19 Ag+ BSS</td></tr><tr><td>1495</td><td>Prognosis Biotech, Rapid Test Ag 2019-nCov</td></tr><tr><td>1501</td><td>New Gene (Hangzhou) Bioengineering Co., Ltd, COVID-19 Antigen Detection Kit</td></tr><tr><td>1574</td><td>Shenzhen Zhenrui Biotechnology Co., Ltd, Zhenrui ®COVID-19 Antigen Test Cassette</td></tr><tr><td>1581</td><td>CTK Biotech, Inc, OnSite COVID-19 Ag Rapid Test</td></tr><tr><td>1599</td><td>Biomerica, Inc., Biomerica COVID-19 Antigen Rapid Test (nasopharyngeal swab)</td></tr><tr><td>1604</td><td>Roche (SD BIOSENSOR), SARS-CoV-2 Rapid Antigen Test</td></tr><tr><td>1606</td><td>RapiGEN Inc, BIOCREDIT COVID-19 Ag - SARS-CoV 2 Antigen test</td></tr><tr><td>1610</td><td>Hangzhou Clongene Biotech Co., Ltd, COVID-19 Antigen Rapid Test Cassette</td></tr><tr><td>1618</td><td>Artron Laboratories Inc, Artron COVID-19 Antigen Test</td></tr><tr><td>1654</td><td>Asan Pharmaceutical CO., LTD, Asan Easy Test COVID-19 Ag</td></tr><tr><td>1736</td><td>Anhui Deep Blue Medical Technology Co., Ltd, COVID-19 (SARS-CoV-2) Antigen Test Kit(Colloidal Gold)</td></tr><tr><td>1739</td><td>Eurobio Scientific, EBS SARS-CoV-2 Ag Rapid Test</td></tr><tr><td>1747</td><td>Guangdong Hecin Scientific, Inc., 2019-nCoV Antigen Test Kit (colloidal gold method)</td></tr><tr><td>1759</td><td>Hubei Jinjian Biology Co., Ltd, SARS-CoV-2 Antigen Test Kit</td></tr><tr><td>1762</td><td>Novatech, SARS CoV-2 Antigen Rapid Test</td></tr><tr><td>1763</td><td>Xiamen AmonMed Biotechnology Co., Ltd, COVID-19 Antigen Rapid Test Kit (Colloidal Gold)</td></tr><tr><td>1764</td><td>JOYSBIO (Tianjin) Biotechnology Co., Ltd, SARS-CoV-2 Antigen Rapid Test Kit (Colloidal Gold)</td></tr><tr><td>1767</td><td>Healgen Scientific, Coronavirus Ag Rapid Test Cassette</td></tr><tr><td>1768</td><td>Shenzhen Watmind Medical Co., Ltd, SARS-CoV-2 Ag Diagnostic Test Kit (Immuno-fluorescence)</td></tr><tr><td>1769</td><td>Shenzhen Watmind Medical Co., Ltd, SARS-CoV-2 Ag Diagnostic Test Kit (Colloidal Gold)</td></tr><tr><td>1773</td><td>Wuhan Life Origin Biotech Joint Stock Co., Ltd., The SARS-CoV-2 Antigen Assay Kit (Immunochromatography)</td></tr><tr><td>1775</td><td>MEXACARE GmbH, MEXACARE COVID-19 Antigen Rapid Test</td></tr><tr><td>1800</td><td>AVALUN SAS, Ksmart® SARS-COV2 Antigen Rapid Test</td></tr><tr><td>1815</td><td>Anhui Deep Blue Medical Technology Co., Ltd, COVID-19 (SARS-CoV-2) Antigen Test Kit (Colloidal Gold) - Nasal Swab</td></tr><tr><td>1820</td><td>Getein Biotech, Inc, SARS-CoV-2 Antigen (Colloidal Gold)</td></tr><tr><td>1822</td><td>Anbio (Xiamen) Biotechnology Co., Ltd, Rapid COVID-19 Antigen Test(Colloidal Gold)</td></tr><tr><td>1833</td><td>AAZ-LMB, COVID-VIRO</td></tr><tr><td>1844</td><td>Hangzhou Immuno Biotech Co.,Ltd, Immunobio SARS-CoV-2 Antigen ANTERIOR NASAL Rapid Test Kit (minimal invasive)</td></tr><tr><td>1855</td><td>GA Generic Assays GmbH, GA CoV-2 Antigen Rapid Test</td></tr><tr><td>1870</td><td>Beijing Hotgen Biotech Co., Ltd, Novel Coronavirus 2019-nCoV Antigen Test (Colloidal Gold)</td></tr><tr><td>1884</td><td>Xiamen Wiz Biotech Co., Ltd, SARS-CoV-2 Antigen Rapid Test (Colloidal Gold)</td></tr><tr><td>1906</td><td>Azure Biotech Inc, COVID-19 Antigen Rapid Test Device</td></tr><tr><td>1919</td><td>Core Technology Co., Ltd, Coretests COVID-19 Ag Test</td></tr><tr><td>1920</td><td>Jiangsu Diagnostics Biotechnology Co.,Ltd., COVID-19 Antigen Rapid Test Cassette (Colloidal Gold)</td></tr><tr><td>1934</td><td>Tody Laboratories Int., Coronavirus (SARS-CoV 2) Antigen - Oral Fluid</td></tr><tr><td>1957</td><td>Zhuhai Lituo Biotechnology Co., Ltd, COVID-19 Antigen Detection Kit (Colloidal Gold)</td></tr><tr><td>1967</td><td>Shenzhen Microprofit Biotech Co., Ltd, SARS-CoV-2 Antigen Test Kit (Colloidal Gold Chromatographic Immunoassay)</td></tr><tr><td>1989</td><td>Boditech Med Inc, AFIAS COVID-19 Ag</td></tr><tr><td>2006</td><td>Jiangsu Medomics medical technology Co.,Ltd., SARS-CoV-2 antigen Test Kit (LFIA)</td></tr><tr><td>2010</td><td>Atlas Link Technology Co., Ltd., NOVA Test® SARS-CoV-2 Antigen Rapid Test Kit (Colloidal Gold Immunochromatography)</td></tr><tr><td>2012</td><td>Genrui Biotech Inc, SARS-CoV-2 Antigen Test Kit (Colloidal Gold)</td></tr><tr><td>2013</td><td>Biotical Health S.L.U., biotical SARS-CoV-2 Ag Card</td></tr><tr><td>2017</td><td>Shenzhen Ultra-Diagnostics Biotec.Co.,Ltd, SARS-CoV-2 Antigen Test Kit</td></tr><tr><td>2029</td><td>Merlin Biomedical (Xiamen) Co., Ltd., SARS-CoV-2 Antigen Rapid Test Cassette</td></tr><tr><td>2031</td><td>Bio-Rad Laboratories / Zhejiang Orient Gene Biotech, Coronavirus Ag Rapid Test Cassette (Swab)</td></tr><tr><td>2035</td><td>BioMaxima SA, SARS-CoV-2 Ag Rapid Test</td></tr><tr><td>2052</td><td>SD BIOSENSOR Inc, STANDARD Q COVID-19 Ag Test Nasal</td></tr><tr><td>2067</td><td>BIOTEKE CORPORATION (WUXI) CO., LTD, SARS-CoV-2 Antigen Test Kit (colloidal gold method)</td></tr><tr><td>2072</td><td>Beijing Jinwofu Bioengineering Technology Co.,Ltd., Novel Coronavirus (SARS-CoV-2) Antigen Rapid Test Kit</td></tr><tr><td>2074</td><td>Triplex International Biosciences (China) Co., LTD., SARS-CoV-2 Antigen Rapid Test Kit</td></tr><tr><td>2078</td><td>ArcDia International Oy Ltd, mariPOC Respi+</td></tr><tr><td>2079</td><td>ArcDia International Oy Ltd, mariPOC Quick Flu+</td></tr><tr><td>2090</td><td>Wuhan UNscience Biotechnology Co., Ltd., SARS-CoV-2 Antigen Rapid Test Kit</td></tr><tr><td>2098</td><td>Wuhan EasyDiagnosis Biomedicine Co., Ltd., COVID-19 (SARS-CoV-2) Antigen Test Kit</td></tr><tr><td>2101</td><td>AXIOM Gesellschaft für Diagnostica und Biochemica mbH, COVID-19 Antigen Rapid Test</td></tr><tr><td>2103</td><td>VivaChek Biotech (Hangzhou) Co., Ltd, VivaDiag Pro SARS-CoV-2 Ag Rapid Test</td></tr><tr><td>2104</td><td>Nal von minden GmbH, NADAL COVID -19 Ag +Influenza A/B Test</td></tr><tr><td>2107</td><td>Jiangsu Bioperfectus Technologies Co., Ltd., Novel Corona Virus (SARS-CoV-2) Ag Rapid Test Kit</td></tr><tr><td>2108</td><td>AESKU.DIAGNOSTICS GmbH & Co. KG, AESKU.RAPID SARS-CoV-2</td></tr><tr><td>2109</td><td>Shenzhen Lvshiyuan Biotechnology Co., Ltd., Green Spring SARS-CoV-2 Antigen-Rapid test-Set</td></tr><tr><td>2116</td><td>PerGrande BioTech Development Co., Ltd., SARS-CoV-2 Antigen Detection Kit (Colloidal Gold Immunochromatographic Assay)</td></tr><tr><td>2128</td><td>Lumigenex (Suzhou) Co., Ltd, PocRoc®SARS-CoV-2 Antigen Rapid Test Kit (Colloidal Gold)</td></tr><tr><td>2130</td><td>Affimedix, Inc., TestNOW® - COVID-19 Antigen Test</td></tr><tr><td>2139</td><td>HANGZHOU LYSUN BIOTECHNOLOGY CO., LTD., COVID-19 Antigen Rapid Test Device（Colloidal Gold）</td></tr><tr><td>2147</td><td>Fujirebio, ESPLINE SARS-CoV-2</td></tr><tr><td>2183</td><td>Getein Biotech, Inc., One Step Test for SARS-CoV-2 Antigen (Colloidal Gold)</td></tr><tr><td>2200</td><td>NanoRepro AG, NanoRepro SARS-CoV-2 Antigen Rapid Test</td></tr><tr><td>2228</td><td>Roche (SD BIOSENSOR), SARS-CoV-2 Rapid Antigen Test Nasal</td></tr><tr><td>2241</td><td>NESAPOR EUROPA SL, MARESKIT</td></tr><tr><td>2242</td><td>DNA Diagnostic, COVID-19 Antigen Detection Kit</td></tr><tr><td>2243</td><td>PCL Inc., PCL COVID19 Ag Gold</td></tr><tr><td>2247</td><td>BioGnost Ltd, CoviGnost AG Test Device 1x20</td></tr><tr><td>2290</td><td>Rapid Pathogen Screening, Inc., LIAISON® Quick Detect Covid Ag Assay</td></tr><tr><td>2317</td><td>Hangzhou Immuno Biotech Co.,Ltd, SARS-CoV-2 Antigen Rapid Test</td></tr><tr><td>2350</td><td>Assure Tech. (Hangzhou) Co., Ltd., ECOTEST COVID-19 Antigen Rapid Test Device</td></tr></table>",
                        "example": "1833",
                        "examples": [
                            "308",
                            "344",
                            "345",
                            "768",
                            "770",
                            "1065",
                            "1097",
                            "1114",
                            "1144",
                            "1162",
                            "1173",
                            "1178",
                            "1180",
                            "1190",
                            "1197",
                            "1199",
                            "1201",
                            "1215",
                            "1216",
                            "1218",
                            "1223",
                            "1225",
                            "1232",
                            "1236",
                            "1242",
                            "1243",
                            "1244",
                            "1253",
                            "1257",
                            "1263",
                            "1266",
                            "1267",
                            "1268",
                            "1271",
                            "1278",
                            "1286",
                            "1295",
                            "1296",
                            "1304",
                            "1319",
                            "1324",
                            "1331",
                            "1333",
                            "1341",
                            "1343",
                            "1357",
                            "1360",
                            "1363",
                            "1365",
                            "1375",
                            "1392",
                            "1420",
                            "1437",
                            "1443",
                            "1456",
                            "1457",
                            "1465",
                            "1466",
                            "1468",
                            "1481",
                            "1484",
                            "1485",
                            "1489",
                            "1490",
                            "1494",
                            "1495",
                            "1501",
                            "1574",
                            "1581",
                            "1599",
                            "1604",
                            "1606",
                            "1610",
                            "1618",
                            "1654",
                            "1736",
                            "1739",
                            "1747",
                            "1759",
                            "1762",
                            "1763",
                            "1764",
                            "1767",
                            "1768",
                            "1769",
                            "1773",
                            "1775",
                            "1800",
                            "1815",
                            "1820",
                            "1822",
                            "1833",
                            "1844",
                            "1855",
                            "1870",
                            "1884",
                            "1906",
                            "1919",
                            "1920",
                            "1934",
                            "1957",
                            "1967",
                            "1989",
                            "2006",
                            "2010",
                            "2012",
                            "2013",
                            "2017",
                            "2029",
                            "2031",
                            "2035",
                            "2052",
                            "2067",
                            "2072",
                            "2074",
                            "2078",
                            "2079",
                            "2090",
                            "2098",
                            "2101",
                            "2103",
                            "2104",
                            "2107",
                            "2108",
                            "2109",
                            "2116",
                            "2128",
                            "2130",
                            "2139",
                            "2147",
                            "2183",
                            "2200",
                            "2228",
                            "2241",
                            "2242",
                            "2243",
                            "2247",
                            "2290",
                            "2317",
                            "2350"
                        ]
                    },
                    "sample_collection_time": {
                        "title": "Sample Collection Time",
                        "type": "string",
                        "description": "Datetime of sample collection",
                        "format": "date-time",
                        "example": "2021-06-14T23:03:34Z"
                    },
                    "test_centre": {
                        "title": "Test Centre",
                        "maxLength": 80,
                        "type": "string",
                        "description": "Centre test was conducted",
                        "example": "UCD Campus testing"
                    },
                    "sample_id": {
                        "title": "Sample ID",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "A unique ID refering to the sample on the service providers IT system, used for auditing generated certificates. This should only be provided once, subsequent requests with the same ID will be flagged for monitering.",
                        "example": "4de53be4-94c3-4f9f-8348-66d352978c90"
                    }
                }
            },
            "HC1CertificateResponse": {
                "title": "HC1CertificateResponse",
                "required": [
                    "unique_certificate_identifier",
                    "report_html",
                    "hc1"
                ],
                "type": "object",
                "properties": {
                    "unique_certificate_identifier": {
                        "title": "Unique Certificate Identifier",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Unique identifier for this certificate, UVCI",
                        "example": "IE:123:TBA"
                    },
                    "report_html": {
                        "title": "Report HTML",
                        "type": "string",
                        "description": "Standalone HTML representation of certificate",
                        "example": "<h1>Cert</h1>..."
                    },
                    "hc1": {
                        "title": "Signed QR payload",
                        "type": "string",
                        "description": "The payload embedded inside the QR code",
                        "example": "HC1:."
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "Message": {
                "title": "Message",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                }
            },
            "QRName": {
                "title": "QRName",
                "required": [
                    "fn",
                    "gn",
                    "fnt",
                    "gnt"
                ],
                "type": "object",
                "properties": {
                    "fn": {
                        "title": "Surname",
                        "type": "string",
                        "description": "Surname(s) of person tested",
                        "example": "Murphy Gunne"
                    },
                    "gn": {
                        "title": "Forename",
                        "type": "string",
                        "description": "The forename(s) of the person addressed in certificate",
                        "example": "Joseph"
                    },
                    "fnt": {
                        "title": "Standarised Surname(s)",
                        "pattern": "^[A-Z<]*$",
                        "type": "string",
                        "description": "ICAO 9303 transilerated surname",
                        "example": "MURPHY<GUNNE"
                    },
                    "gnt": {
                        "title": "Standarised forename(s)",
                        "pattern": "^[A-Z<]*$",
                        "type": "string",
                        "description": "ICAO 9303 transilerated forename",
                        "example": "JOSEPH"
                    }
                }
            },
            "QRRecovery": {
                "title": "QRRecovery",
                "required": [
                    "fr",
                    "df",
                    "du",
                    "tg",
                    "co",
                    "is",
                    "ci"
                ],
                "type": "object",
                "properties": {
                    "fr": {
                        "title": "Date of first positive test",
                        "type": "string",
                        "description": "ISO 8601 complete date of first positive NAA test result",
                        "format": "date",
                        "example": "2021-06-14"
                    },
                    "df": {
                        "title": "Cert valid from",
                        "type": "string",
                        "description": "ISO 8601 complete date: Certificate valid from",
                        "format": "date",
                        "example": "2021-06-14"
                    },
                    "du": {
                        "title": "Cert valid to",
                        "type": "string",
                        "description": "ISO 8601 complete date: Certificate valid to",
                        "format": "date",
                        "example": "2021-06-14"
                    },
                    "tg": {
                        "title": "Disease Agent Targeted",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/disease-agent-targeted"
                            }
                        ],
                        "description": "disease or agent targeted<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>840539006</td><td>COVID-19</td></tr></table>",
                        "example": "840539006"
                    },
                    "co": {
                        "title": "Country Of Test",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/country_vt"
                            }
                        ],
                        "description": "Country where the test took place<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>AD</td><td>Andorra</td></tr><tr><td>AE</td><td>United Arab Emirates</td></tr><tr><td>AF</td><td>Afghanistan</td></tr><tr><td>AG</td><td>Antigua and Barbuda</td></tr><tr><td>AI</td><td>Anguilla</td></tr><tr><td>AL</td><td>Albania</td></tr><tr><td>AM</td><td>Armenia</td></tr><tr><td>AO</td><td>Angola</td></tr><tr><td>AQ</td><td>Antarctica</td></tr><tr><td>AR</td><td>Argentina</td></tr><tr><td>AS</td><td>American Samoa</td></tr><tr><td>AT</td><td>Austria</td></tr><tr><td>AU</td><td>Australia</td></tr><tr><td>AW</td><td>Aruba</td></tr><tr><td>AX</td><td>Åland Islands</td></tr><tr><td>AZ</td><td>Azerbaijan</td></tr><tr><td>BA</td><td>Bosnia and Herzegovina</td></tr><tr><td>BB</td><td>Barbados</td></tr><tr><td>BD</td><td>Bangladesh</td></tr><tr><td>BE</td><td>Belgium</td></tr><tr><td>BF</td><td>Burkina Faso</td></tr><tr><td>BG</td><td>Bulgaria</td></tr><tr><td>BH</td><td>Bahrain</td></tr><tr><td>BI</td><td>Burundi</td></tr><tr><td>BJ</td><td>Benin</td></tr><tr><td>BL</td><td>Saint Barthélemy</td></tr><tr><td>BM</td><td>Bermuda</td></tr><tr><td>BN</td><td>Brunei Darussalam</td></tr><tr><td>BO</td><td>Bolivia, Plurinational State of</td></tr><tr><td>BQ</td><td>Bonaire, Sint Eustatius and Saba</td></tr><tr><td>BR</td><td>Brazil</td></tr><tr><td>BS</td><td>Bahamas</td></tr><tr><td>BT</td><td>Bhutan</td></tr><tr><td>BV</td><td>Bouvet Island</td></tr><tr><td>BW</td><td>Botswana</td></tr><tr><td>BY</td><td>Belarus</td></tr><tr><td>BZ</td><td>Belize</td></tr><tr><td>CA</td><td>Canada</td></tr><tr><td>CC</td><td>Cocos (Keeling) Islands</td></tr><tr><td>CD</td><td>Congo, the Democratic Republic of the</td></tr><tr><td>CF</td><td>Central African Republic</td></tr><tr><td>CG</td><td>Congo</td></tr><tr><td>CH</td><td>Switzerland</td></tr><tr><td>CI</td><td>Côte d''Ivoire</td></tr><tr><td>CK</td><td>Cook Islands</td></tr><tr><td>CL</td><td>Chile</td></tr><tr><td>CM</td><td>Cameroon</td></tr><tr><td>CN</td><td>China</td></tr><tr><td>CO</td><td>Colombia</td></tr><tr><td>CR</td><td>Costa Rica</td></tr><tr><td>CU</td><td>Cuba</td></tr><tr><td>CV</td><td>Cabo Verde</td></tr><tr><td>CW</td><td>Curaçao</td></tr><tr><td>CX</td><td>Christmas Island</td></tr><tr><td>CY</td><td>Cyprus</td></tr><tr><td>CZ</td><td>Czechia</td></tr><tr><td>DE</td><td>Germany</td></tr><tr><td>DJ</td><td>Djibouti</td></tr><tr><td>DK</td><td>Denmark</td></tr><tr><td>DM</td><td>Dominica</td></tr><tr><td>DO</td><td>Dominican Republic</td></tr><tr><td>DZ</td><td>Algeria</td></tr><tr><td>EC</td><td>Ecuador</td></tr><tr><td>EE</td><td>Estonia</td></tr><tr><td>EG</td><td>Egypt</td></tr><tr><td>EH</td><td>Western Sahara</td></tr><tr><td>ER</td><td>Eritrea</td></tr><tr><td>ES</td><td>Spain</td></tr><tr><td>ET</td><td>Ethiopia</td></tr><tr><td>FI</td><td>Finland</td></tr><tr><td>FJ</td><td>Fiji</td></tr><tr><td>FK</td><td>Falkland Islands (Malvinas)</td></tr><tr><td>FM</td><td>Micronesia, Federated States of</td></tr><tr><td>FO</td><td>Faroe Islands</td></tr><tr><td>FR</td><td>France</td></tr><tr><td>GA</td><td>Gabon</td></tr><tr><td>GB</td><td>United Kingdom of Great Britain and Northern Ireland</td></tr><tr><td>GD</td><td>Grenada</td></tr><tr><td>GE</td><td>Georgia</td></tr><tr><td>GF</td><td>French Guiana</td></tr><tr><td>GG</td><td>Guernsey</td></tr><tr><td>GH</td><td>Ghana</td></tr><tr><td>GI</td><td>Gibraltar</td></tr><tr><td>GL</td><td>Greenland</td></tr><tr><td>GM</td><td>Gambia</td></tr><tr><td>GN</td><td>Guinea</td></tr><tr><td>GP</td><td>Guadeloupe</td></tr><tr><td>GQ</td><td>Equatorial Guinea</td></tr><tr><td>GR</td><td>Greece</td></tr><tr><td>GS</td><td>South Georgia and the South Sandwich Islands</td></tr><tr><td>GT</td><td>Guatemala</td></tr><tr><td>GU</td><td>Guam</td></tr><tr><td>GW</td><td>Guinea-Bissau</td></tr><tr><td>GY</td><td>Guyana</td></tr><tr><td>HK</td><td>Hong Kong</td></tr><tr><td>HM</td><td>Heard Island and McDonald Islands</td></tr><tr><td>HN</td><td>Honduras</td></tr><tr><td>HR</td><td>Croatia</td></tr><tr><td>HT</td><td>Haiti</td></tr><tr><td>HU</td><td>Hungary</td></tr><tr><td>ID</td><td>Indonesia</td></tr><tr><td>IE</td><td>Ireland</td></tr><tr><td>IL</td><td>Israel</td></tr><tr><td>IM</td><td>Isle of Man</td></tr><tr><td>IN</td><td>India</td></tr><tr><td>IO</td><td>British Indian Ocean Territory</td></tr><tr><td>IQ</td><td>Iraq</td></tr><tr><td>IR</td><td>Iran, Islamic Republic of</td></tr><tr><td>IS</td><td>Iceland</td></tr><tr><td>IT</td><td>Italy</td></tr><tr><td>JE</td><td>Jersey</td></tr><tr><td>JM</td><td>Jamaica</td></tr><tr><td>JO</td><td>Jordan</td></tr><tr><td>JP</td><td>Japan</td></tr><tr><td>KE</td><td>Kenya</td></tr><tr><td>KG</td><td>Kyrgyzstan</td></tr><tr><td>KH</td><td>Cambodia</td></tr><tr><td>KI</td><td>Kiribati</td></tr><tr><td>KM</td><td>Comoros</td></tr><tr><td>KN</td><td>Saint Kitts and Nevis</td></tr><tr><td>KP</td><td>Korea, Democratic People''s Republic of</td></tr><tr><td>KR</td><td>Korea, Republic of</td></tr><tr><td>KW</td><td>Kuwait</td></tr><tr><td>KY</td><td>Cayman Islands</td></tr><tr><td>KZ</td><td>Kazakhstan</td></tr><tr><td>LA</td><td>Lao People''s Democratic Republic</td></tr><tr><td>LB</td><td>Lebanon</td></tr><tr><td>LC</td><td>Saint Lucia</td></tr><tr><td>LI</td><td>Liechtenstein</td></tr><tr><td>LK</td><td>Sri Lanka</td></tr><tr><td>LR</td><td>Liberia</td></tr><tr><td>LS</td><td>Lesotho</td></tr><tr><td>LT</td><td>Lithuania</td></tr><tr><td>LU</td><td>Luxembourg</td></tr><tr><td>LV</td><td>Latvia</td></tr><tr><td>LY</td><td>Libya</td></tr><tr><td>MA</td><td>Morocco</td></tr><tr><td>MC</td><td>Monaco</td></tr><tr><td>MD</td><td>Moldova, Republic of</td></tr><tr><td>ME</td><td>Montenegro</td></tr><tr><td>MF</td><td>Saint Martin (French part)</td></tr><tr><td>MG</td><td>Madagascar</td></tr><tr><td>MH</td><td>Marshall Islands</td></tr><tr><td>MK</td><td>Macedonia, the former Yugoslav Republic of</td></tr><tr><td>ML</td><td>Mali</td></tr><tr><td>MM</td><td>Myanmar</td></tr><tr><td>MN</td><td>Mongolia</td></tr><tr><td>MO</td><td>Macao</td></tr><tr><td>MP</td><td>Northern Mariana Islands</td></tr><tr><td>MQ</td><td>Martinique</td></tr><tr><td>MR</td><td>Mauritania</td></tr><tr><td>MS</td><td>Montserrat</td></tr><tr><td>MT</td><td>Malta</td></tr><tr><td>MU</td><td>Mauritius</td></tr><tr><td>MV</td><td>Maldives</td></tr><tr><td>MW</td><td>Malawi</td></tr><tr><td>MX</td><td>Mexico</td></tr><tr><td>MY</td><td>Malaysia</td></tr><tr><td>MZ</td><td>Mozambique</td></tr><tr><td>NA</td><td>Namibia</td></tr><tr><td>NC</td><td>New Caledonia</td></tr><tr><td>NE</td><td>Niger</td></tr><tr><td>NF</td><td>Norfolk Island</td></tr><tr><td>NG</td><td>Nigeria</td></tr><tr><td>NI</td><td>Nicaragua</td></tr><tr><td>NL</td><td>Netherlands</td></tr><tr><td>NO</td><td>Norway</td></tr><tr><td>NP</td><td>Nepal</td></tr><tr><td>NR</td><td>Nauru</td></tr><tr><td>NU</td><td>Niue</td></tr><tr><td>NZ</td><td>New Zealand</td></tr><tr><td>OM</td><td>Oman</td></tr><tr><td>PA</td><td>Panama</td></tr><tr><td>PE</td><td>Peru</td></tr><tr><td>PF</td><td>French Polynesia</td></tr><tr><td>PG</td><td>Papua New Guinea</td></tr><tr><td>PH</td><td>Philippines</td></tr><tr><td>PK</td><td>Pakistan</td></tr><tr><td>PL</td><td>Poland</td></tr><tr><td>PM</td><td>Saint Pierre and Miquelon</td></tr><tr><td>PN</td><td>Pitcairn</td></tr><tr><td>PR</td><td>Puerto Rico</td></tr><tr><td>PS</td><td>Palestine, State of</td></tr><tr><td>PT</td><td>Portugal</td></tr><tr><td>PW</td><td>Palau</td></tr><tr><td>PY</td><td>Paraguay</td></tr><tr><td>QA</td><td>Qatar</td></tr><tr><td>RE</td><td>Réunion</td></tr><tr><td>RO</td><td>Romania</td></tr><tr><td>RS</td><td>Serbia</td></tr><tr><td>RU</td><td>Russian Federation</td></tr><tr><td>RW</td><td>Rwanda</td></tr><tr><td>SA</td><td>Saudi Arabia</td></tr><tr><td>SB</td><td>Solomon Islands</td></tr><tr><td>SC</td><td>Seychelles</td></tr><tr><td>SD</td><td>Sudan</td></tr><tr><td>SE</td><td>Sweden</td></tr><tr><td>SG</td><td>Singapore</td></tr><tr><td>SH</td><td>Saint Helena, Ascension and Tristan da Cunha</td></tr><tr><td>SI</td><td>Slovenia</td></tr><tr><td>SJ</td><td>Svalbard and Jan Mayen</td></tr><tr><td>SK</td><td>Slovakia</td></tr><tr><td>SL</td><td>Sierra Leone</td></tr><tr><td>SM</td><td>San Marino</td></tr><tr><td>SN</td><td>Senegal</td></tr><tr><td>SO</td><td>Somalia</td></tr><tr><td>SR</td><td>Suriname</td></tr><tr><td>SS</td><td>South Sudan</td></tr><tr><td>ST</td><td>Sao Tome and Principe</td></tr><tr><td>SV</td><td>El Salvador</td></tr><tr><td>SX</td><td>Sint Maarten (Dutch part)</td></tr><tr><td>SY</td><td>Syrian Arab Republic</td></tr><tr><td>SZ</td><td>Swaziland</td></tr><tr><td>TC</td><td>Turks and Caicos Islands</td></tr><tr><td>TD</td><td>Chad</td></tr><tr><td>TF</td><td>French Southern Territories</td></tr><tr><td>TG</td><td>Togo</td></tr><tr><td>TH</td><td>Thailand</td></tr><tr><td>TJ</td><td>Tajikistan</td></tr><tr><td>TK</td><td>Tokelau</td></tr><tr><td>TL</td><td>Timor-Leste</td></tr><tr><td>TM</td><td>Turkmenistan</td></tr><tr><td>TN</td><td>Tunisia</td></tr><tr><td>TO</td><td>Tonga</td></tr><tr><td>TR</td><td>Turkey</td></tr><tr><td>TT</td><td>Trinidad and Tobago</td></tr><tr><td>TV</td><td>Tuvalu</td></tr><tr><td>TW</td><td>Taiwan, Province of China</td></tr><tr><td>TZ</td><td>Tanzania, United Republic of</td></tr><tr><td>UA</td><td>Ukraine</td></tr><tr><td>UG</td><td>Uganda</td></tr><tr><td>UM</td><td>United States Minor Outlying Islands</td></tr><tr><td>US</td><td>United States of America</td></tr><tr><td>UY</td><td>Uruguay</td></tr><tr><td>UZ</td><td>Uzbekistan</td></tr><tr><td>VA</td><td>Holy See</td></tr><tr><td>VC</td><td>Saint Vincent and the Grenadines</td></tr><tr><td>VE</td><td>Venezuela, Bolivarian Republic of</td></tr><tr><td>VG</td><td>Virgin Islands, British</td></tr><tr><td>VI</td><td>Virgin Islands,</td></tr><tr><td>VN</td><td>Viet Nam</td></tr><tr><td>VU</td><td>Vanuatu</td></tr><tr><td>WF</td><td>Wallis and Futuna</td></tr><tr><td>WS</td><td>Samoa</td></tr><tr><td>YE</td><td>Yemen</td></tr><tr><td>YT</td><td>Mayotte</td></tr><tr><td>ZA</td><td>South Africa</td></tr><tr><td>ZM</td><td>Zambia</td></tr><tr><td>ZW</td><td>Zimbabwe</td></tr></table>",
                        "example": "IE"
                    },
                    "is": {
                        "title": "Certificate Issuer",
                        "maxLength": 80,
                        "type": "string",
                        "description": "Issuer of the digital certificate",
                        "example": "Department of Health"
                    },
                    "ci": {
                        "title": "Unique Certificate Identifier",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Unique identifier for this certificate, UVCI",
                        "example": "IE:123:TBA"
                    }
                }
            },
            "QRVaccine": {
                "title": "QRVaccine",
                "required": [
                    "tg",
                    "vp",
                    "mp",
                    "ma",
                    "dn",
                    "sd",
                    "dt",
                    "co",
                    "is",
                    "ci"
                ],
                "type": "object",
                "properties": {
                    "tg": {
                        "title": "Disease Agent Targeted",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/disease-agent-targeted"
                            }
                        ],
                        "description": "disease or agent targeted<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>840539006</td><td>COVID-19</td></tr></table>",
                        "example": "840539006"
                    },
                    "vp": {
                        "title": "Vaccine Prophylaxis",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/vaccine-prophylaxis"
                            }
                        ],
                        "description": "EU eHealthNetwork: Value Sets for Digital Covid Certificates. version 1.0, 2021-04-16, section 2.2<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>1119305005</td><td>SARS-CoV-2 antigen vaccine</td></tr><tr><td>1119349007</td><td>SARS-CoV-2 mRNA vaccine</td></tr><tr><td>J07BX03</td><td>covid-19 vaccines</td></tr></table>",
                        "example": "1119349007"
                    },
                    "mp": {
                        "title": "Vaccine Medicinal Product",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/vaccine-medicinal-product"
                            }
                        ],
                        "description": "EU eHealthNetwork: Value Sets for Digital Covid Certificates. version 1.0, 2021-04-16, section 2.3<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>EU/1/20/1528</td><td>Comirnaty</td></tr><tr><td>EU/1/20/1507</td><td>Spikevax (previously COVID-19 Vaccine Moderna)</td></tr><tr><td>EU/1/21/1529</td><td>Vaxzevria</td></tr><tr><td>EU/1/20/1525</td><td>COVID-19 Vaccine Janssen</td></tr><tr><td>CVnCoV</td><td>CVnCoV</td></tr><tr><td>Sputnik-V</td><td>Sputnik-V</td></tr><tr><td>Convidecia</td><td>Convidecia</td></tr><tr><td>EpiVacCorona</td><td>EpiVacCorona</td></tr><tr><td>BBIBP-CorV</td><td>BBIBP-CorV</td></tr><tr><td>Inactivated-SARS-CoV-2-Vero-Cell</td><td>Inactivated SARS-CoV-2 (Vero Cell)</td></tr><tr><td>CoronaVac</td><td>CoronaVac</td></tr><tr><td>Covaxin</td><td>Covaxin (also known as BBV152 A, B, C)</td></tr><tr><td>Covishield</td><td>Covishield (ChAdOx1_nCoV-19)</td></tr></table>",
                        "example": "EU/1/20/1528"
                    },
                    "ma": {
                        "title": "Marketing Authorisation Holder",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/vaccine-mah-manf"
                            }
                        ],
                        "description": "EU eHealthNetwork: Value Sets for Digital Covid Certificates. version 1.0, 2021-04-16, section 2.4 <table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>ORG-100001699</td><td>AstraZeneca AB</td></tr><tr><td>ORG-100030215</td><td>Biontech Manufacturing GmbH</td></tr><tr><td>ORG-100001417</td><td>Janssen-Cilag International</td></tr><tr><td>ORG-100031184</td><td>Moderna Biotech Spain S.L.</td></tr><tr><td>ORG-100006270</td><td>Curevac AG</td></tr><tr><td>ORG-100013793</td><td>CanSino Biologics</td></tr><tr><td>ORG-100020693</td><td>China Sinopharm International Corp. - Beijing location</td></tr><tr><td>ORG-100010771</td><td>Sinopharm Weiqida Europe Pharmaceutical s.r.o. - Prague location</td></tr><tr><td>ORG-100024420</td><td>Sinopharm Zhijun (Shenzhen) Pharmaceutical Co. Ltd. - Shenzhen location</td></tr><tr><td>ORG-100032020</td><td>Novavax CZ AS</td></tr><tr><td>Gamaleya-Research-Institute</td><td>Gamaleya Research Institute</td></tr><tr><td>Vector-Institute</td><td>Vector Institute</td></tr><tr><td>Sinovac-Biotech</td><td>Sinovac Biotech</td></tr><tr><td>Bharat-Biotech</td><td>Bharat Biotech</td></tr><tr><td>ORG-100001981</td><td>Serum Institute Of India Private Limited</td></tr></table>",
                        "example": "ORG-100001699"
                    },
                    "dn": {
                        "title": "Dose Number",
                        "minimum": 1.0,
                        "type": "integer",
                        "description": "Dose Number / Total doses in Series: positive integer",
                        "example": 1
                    },
                    "sd": {
                        "title": "Total Series of Doses",
                        "minimum": 1.0,
                        "type": "integer",
                        "description": "Dose Number / Total doses in Series: positive integer",
                        "example": 2
                    },
                    "dt": {
                        "title": "Date of Vaccination",
                        "type": "string",
                        "description": "ISO8601 complete date: Date of Vaccination",
                        "format": "date",
                        "example": "2021-06-14"
                    },
                    "co": {
                        "title": "Country Of Vaccination",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/country_vt"
                            }
                        ],
                        "description": "Country where the vaccination took place<table> <tr> <th>Code</th> <th>Name</th> </tr><tr><td>AD</td><td>Andorra</td></tr><tr><td>AE</td><td>United Arab Emirates</td></tr><tr><td>AF</td><td>Afghanistan</td></tr><tr><td>AG</td><td>Antigua and Barbuda</td></tr><tr><td>AI</td><td>Anguilla</td></tr><tr><td>AL</td><td>Albania</td></tr><tr><td>AM</td><td>Armenia</td></tr><tr><td>AO</td><td>Angola</td></tr><tr><td>AQ</td><td>Antarctica</td></tr><tr><td>AR</td><td>Argentina</td></tr><tr><td>AS</td><td>American Samoa</td></tr><tr><td>AT</td><td>Austria</td></tr><tr><td>AU</td><td>Australia</td></tr><tr><td>AW</td><td>Aruba</td></tr><tr><td>AX</td><td>Åland Islands</td></tr><tr><td>AZ</td><td>Azerbaijan</td></tr><tr><td>BA</td><td>Bosnia and Herzegovina</td></tr><tr><td>BB</td><td>Barbados</td></tr><tr><td>BD</td><td>Bangladesh</td></tr><tr><td>BE</td><td>Belgium</td></tr><tr><td>BF</td><td>Burkina Faso</td></tr><tr><td>BG</td><td>Bulgaria</td></tr><tr><td>BH</td><td>Bahrain</td></tr><tr><td>BI</td><td>Burundi</td></tr><tr><td>BJ</td><td>Benin</td></tr><tr><td>BL</td><td>Saint Barthélemy</td></tr><tr><td>BM</td><td>Bermuda</td></tr><tr><td>BN</td><td>Brunei Darussalam</td></tr><tr><td>BO</td><td>Bolivia, Plurinational State of</td></tr><tr><td>BQ</td><td>Bonaire, Sint Eustatius and Saba</td></tr><tr><td>BR</td><td>Brazil</td></tr><tr><td>BS</td><td>Bahamas</td></tr><tr><td>BT</td><td>Bhutan</td></tr><tr><td>BV</td><td>Bouvet Island</td></tr><tr><td>BW</td><td>Botswana</td></tr><tr><td>BY</td><td>Belarus</td></tr><tr><td>BZ</td><td>Belize</td></tr><tr><td>CA</td><td>Canada</td></tr><tr><td>CC</td><td>Cocos (Keeling) Islands</td></tr><tr><td>CD</td><td>Congo, the Democratic Republic of the</td></tr><tr><td>CF</td><td>Central African Republic</td></tr><tr><td>CG</td><td>Congo</td></tr><tr><td>CH</td><td>Switzerland</td></tr><tr><td>CI</td><td>Côte d''Ivoire</td></tr><tr><td>CK</td><td>Cook Islands</td></tr><tr><td>CL</td><td>Chile</td></tr><tr><td>CM</td><td>Cameroon</td></tr><tr><td>CN</td><td>China</td></tr><tr><td>CO</td><td>Colombia</td></tr><tr><td>CR</td><td>Costa Rica</td></tr><tr><td>CU</td><td>Cuba</td></tr><tr><td>CV</td><td>Cabo Verde</td></tr><tr><td>CW</td><td>Curaçao</td></tr><tr><td>CX</td><td>Christmas Island</td></tr><tr><td>CY</td><td>Cyprus</td></tr><tr><td>CZ</td><td>Czechia</td></tr><tr><td>DE</td><td>Germany</td></tr><tr><td>DJ</td><td>Djibouti</td></tr><tr><td>DK</td><td>Denmark</td></tr><tr><td>DM</td><td>Dominica</td></tr><tr><td>DO</td><td>Dominican Republic</td></tr><tr><td>DZ</td><td>Algeria</td></tr><tr><td>EC</td><td>Ecuador</td></tr><tr><td>EE</td><td>Estonia</td></tr><tr><td>EG</td><td>Egypt</td></tr><tr><td>EH</td><td>Western Sahara</td></tr><tr><td>ER</td><td>Eritrea</td></tr><tr><td>ES</td><td>Spain</td></tr><tr><td>ET</td><td>Ethiopia</td></tr><tr><td>FI</td><td>Finland</td></tr><tr><td>FJ</td><td>Fiji</td></tr><tr><td>FK</td><td>Falkland Islands (Malvinas)</td></tr><tr><td>FM</td><td>Micronesia, Federated States of</td></tr><tr><td>FO</td><td>Faroe Islands</td></tr><tr><td>FR</td><td>France</td></tr><tr><td>GA</td><td>Gabon</td></tr><tr><td>GB</td><td>United Kingdom of Great Britain and Northern Ireland</td></tr><tr><td>GD</td><td>Grenada</td></tr><tr><td>GE</td><td>Georgia</td></tr><tr><td>GF</td><td>French Guiana</td></tr><tr><td>GG</td><td>Guernsey</td></tr><tr><td>GH</td><td>Ghana</td></tr><tr><td>GI</td><td>Gibraltar</td></tr><tr><td>GL</td><td>Greenland</td></tr><tr><td>GM</td><td>Gambia</td></tr><tr><td>GN</td><td>Guinea</td></tr><tr><td>GP</td><td>Guadeloupe</td></tr><tr><td>GQ</td><td>Equatorial Guinea</td></tr><tr><td>GR</td><td>Greece</td></tr><tr><td>GS</td><td>South Georgia and the South Sandwich Islands</td></tr><tr><td>GT</td><td>Guatemala</td></tr><tr><td>GU</td><td>Guam</td></tr><tr><td>GW</td><td>Guinea-Bissau</td></tr><tr><td>GY</td><td>Guyana</td></tr><tr><td>HK</td><td>Hong Kong</td></tr><tr><td>HM</td><td>Heard Island and McDonald Islands</td></tr><tr><td>HN</td><td>Honduras</td></tr><tr><td>HR</td><td>Croatia</td></tr><tr><td>HT</td><td>Haiti</td></tr><tr><td>HU</td><td>Hungary</td></tr><tr><td>ID</td><td>Indonesia</td></tr><tr><td>IE</td><td>Ireland</td></tr><tr><td>IL</td><td>Israel</td></tr><tr><td>IM</td><td>Isle of Man</td></tr><tr><td>IN</td><td>India</td></tr><tr><td>IO</td><td>British Indian Ocean Territory</td></tr><tr><td>IQ</td><td>Iraq</td></tr><tr><td>IR</td><td>Iran, Islamic Republic of</td></tr><tr><td>IS</td><td>Iceland</td></tr><tr><td>IT</td><td>Italy</td></tr><tr><td>JE</td><td>Jersey</td></tr><tr><td>JM</td><td>Jamaica</td></tr><tr><td>JO</td><td>Jordan</td></tr><tr><td>JP</td><td>Japan</td></tr><tr><td>KE</td><td>Kenya</td></tr><tr><td>KG</td><td>Kyrgyzstan</td></tr><tr><td>KH</td><td>Cambodia</td></tr><tr><td>KI</td><td>Kiribati</td></tr><tr><td>KM</td><td>Comoros</td></tr><tr><td>KN</td><td>Saint Kitts and Nevis</td></tr><tr><td>KP</td><td>Korea, Democratic People''s Republic of</td></tr><tr><td>KR</td><td>Korea, Republic of</td></tr><tr><td>KW</td><td>Kuwait</td></tr><tr><td>KY</td><td>Cayman Islands</td></tr><tr><td>KZ</td><td>Kazakhstan</td></tr><tr><td>LA</td><td>Lao People''s Democratic Republic</td></tr><tr><td>LB</td><td>Lebanon</td></tr><tr><td>LC</td><td>Saint Lucia</td></tr><tr><td>LI</td><td>Liechtenstein</td></tr><tr><td>LK</td><td>Sri Lanka</td></tr><tr><td>LR</td><td>Liberia</td></tr><tr><td>LS</td><td>Lesotho</td></tr><tr><td>LT</td><td>Lithuania</td></tr><tr><td>LU</td><td>Luxembourg</td></tr><tr><td>LV</td><td>Latvia</td></tr><tr><td>LY</td><td>Libya</td></tr><tr><td>MA</td><td>Morocco</td></tr><tr><td>MC</td><td>Monaco</td></tr><tr><td>MD</td><td>Moldova, Republic of</td></tr><tr><td>ME</td><td>Montenegro</td></tr><tr><td>MF</td><td>Saint Martin (French part)</td></tr><tr><td>MG</td><td>Madagascar</td></tr><tr><td>MH</td><td>Marshall Islands</td></tr><tr><td>MK</td><td>Macedonia, the former Yugoslav Republic of</td></tr><tr><td>ML</td><td>Mali</td></tr><tr><td>MM</td><td>Myanmar</td></tr><tr><td>MN</td><td>Mongolia</td></tr><tr><td>MO</td><td>Macao</td></tr><tr><td>MP</td><td>Northern Mariana Islands</td></tr><tr><td>MQ</td><td>Martinique</td></tr><tr><td>MR</td><td>Mauritania</td></tr><tr><td>MS</td><td>Montserrat</td></tr><tr><td>MT</td><td>Malta</td></tr><tr><td>MU</td><td>Mauritius</td></tr><tr><td>MV</td><td>Maldives</td></tr><tr><td>MW</td><td>Malawi</td></tr><tr><td>MX</td><td>Mexico</td></tr><tr><td>MY</td><td>Malaysia</td></tr><tr><td>MZ</td><td>Mozambique</td></tr><tr><td>NA</td><td>Namibia</td></tr><tr><td>NC</td><td>New Caledonia</td></tr><tr><td>NE</td><td>Niger</td></tr><tr><td>NF</td><td>Norfolk Island</td></tr><tr><td>NG</td><td>Nigeria</td></tr><tr><td>NI</td><td>Nicaragua</td></tr><tr><td>NL</td><td>Netherlands</td></tr><tr><td>NO</td><td>Norway</td></tr><tr><td>NP</td><td>Nepal</td></tr><tr><td>NR</td><td>Nauru</td></tr><tr><td>NU</td><td>Niue</td></tr><tr><td>NZ</td><td>New Zealand</td></tr><tr><td>OM</td><td>Oman</td></tr><tr><td>PA</td><td>Panama</td></tr><tr><td>PE</td><td>Peru</td></tr><tr><td>PF</td><td>French Polynesia</td></tr><tr><td>PG</td><td>Papua New Guinea</td></tr><tr><td>PH</td><td>Philippines</td></tr><tr><td>PK</td><td>Pakistan</td></tr><tr><td>PL</td><td>Poland</td></tr><tr><td>PM</td><td>Saint Pierre and Miquelon</td></tr><tr><td>PN</td><td>Pitcairn</td></tr><tr><td>PR</td><td>Puerto Rico</td></tr><tr><td>PS</td><td>Palestine, State of</td></tr><tr><td>PT</td><td>Portugal</td></tr><tr><td>PW</td><td>Palau</td></tr><tr><td>PY</td><td>Paraguay</td></tr><tr><td>QA</td><td>Qatar</td></tr><tr><td>RE</td><td>Réunion</td></tr><tr><td>RO</td><td>Romania</td></tr><tr><td>RS</td><td>Serbia</td></tr><tr><td>RU</td><td>Russian Federation</td></tr><tr><td>RW</td><td>Rwanda</td></tr><tr><td>SA</td><td>Saudi Arabia</td></tr><tr><td>SB</td><td>Solomon Islands</td></tr><tr><td>SC</td><td>Seychelles</td></tr><tr><td>SD</td><td>Sudan</td></tr><tr><td>SE</td><td>Sweden</td></tr><tr><td>SG</td><td>Singapore</td></tr><tr><td>SH</td><td>Saint Helena, Ascension and Tristan da Cunha</td></tr><tr><td>SI</td><td>Slovenia</td></tr><tr><td>SJ</td><td>Svalbard and Jan Mayen</td></tr><tr><td>SK</td><td>Slovakia</td></tr><tr><td>SL</td><td>Sierra Leone</td></tr><tr><td>SM</td><td>San Marino</td></tr><tr><td>SN</td><td>Senegal</td></tr><tr><td>SO</td><td>Somalia</td></tr><tr><td>SR</td><td>Suriname</td></tr><tr><td>SS</td><td>South Sudan</td></tr><tr><td>ST</td><td>Sao Tome and Principe</td></tr><tr><td>SV</td><td>El Salvador</td></tr><tr><td>SX</td><td>Sint Maarten (Dutch part)</td></tr><tr><td>SY</td><td>Syrian Arab Republic</td></tr><tr><td>SZ</td><td>Swaziland</td></tr><tr><td>TC</td><td>Turks and Caicos Islands</td></tr><tr><td>TD</td><td>Chad</td></tr><tr><td>TF</td><td>French Southern Territories</td></tr><tr><td>TG</td><td>Togo</td></tr><tr><td>TH</td><td>Thailand</td></tr><tr><td>TJ</td><td>Tajikistan</td></tr><tr><td>TK</td><td>Tokelau</td></tr><tr><td>TL</td><td>Timor-Leste</td></tr><tr><td>TM</td><td>Turkmenistan</td></tr><tr><td>TN</td><td>Tunisia</td></tr><tr><td>TO</td><td>Tonga</td></tr><tr><td>TR</td><td>Turkey</td></tr><tr><td>TT</td><td>Trinidad and Tobago</td></tr><tr><td>TV</td><td>Tuvalu</td></tr><tr><td>TW</td><td>Taiwan, Province of China</td></tr><tr><td>TZ</td><td>Tanzania, United Republic of</td></tr><tr><td>UA</td><td>Ukraine</td></tr><tr><td>UG</td><td>Uganda</td></tr><tr><td>UM</td><td>United States Minor Outlying Islands</td></tr><tr><td>US</td><td>United States of America</td></tr><tr><td>UY</td><td>Uruguay</td></tr><tr><td>UZ</td><td>Uzbekistan</td></tr><tr><td>VA</td><td>Holy See</td></tr><tr><td>VC</td><td>Saint Vincent and the Grenadines</td></tr><tr><td>VE</td><td>Venezuela, Bolivarian Republic of</td></tr><tr><td>VG</td><td>Virgin Islands, British</td></tr><tr><td>VI</td><td>Virgin Islands,</td></tr><tr><td>VN</td><td>Viet Nam</td></tr><tr><td>VU</td><td>Vanuatu</td></tr><tr><td>WF</td><td>Wallis and Futuna</td></tr><tr><td>WS</td><td>Samoa</td></tr><tr><td>YE</td><td>Yemen</td></tr><tr><td>YT</td><td>Mayotte</td></tr><tr><td>ZA</td><td>South Africa</td></tr><tr><td>ZM</td><td>Zambia</td></tr><tr><td>ZW</td><td>Zimbabwe</td></tr></table>",
                        "example": "IE"
                    },
                    "is": {
                        "title": "Certificate Issuer",
                        "maxLength": 80,
                        "type": "string",
                        "description": "Issuer of the digital certificate",
                        "example": "Department of Health"
                    },
                    "ci": {
                        "title": "Unique Certificate Identifier",
                        "maxLength": 100,
                        "type": "string",
                        "description": "Unique identifier for this certificate, UVCI",
                        "example": "IE:123:TBA"
                    }
                },
                "description": "QR code context for a vaccine"
            },
            "RecoveryQRCode": {
                "title": "RecoveryQRCode",
                "required": [
                    "ver",
                    "nam",
                    "dob",
                    "r"
                ],
                "type": "object",
                "properties": {
                    "ver": {
                        "title": "Version",
                        "pattern": "^\\d+.\\d+.\\d+$",
                        "type": "string",
                        "description": "Version of the schema",
                        "example": "1.3.0"
                    },
                    "nam": {
                        "$ref": "#/components/schemas/QRName"
                    },
                    "dob": {
                        "title": "Date Of Birth",
                        "pattern": "^((19|20)\\d\\d(-\\d\\d){0,2}){0,1}$",
                        "type": "string",
                        "description": "Date of birth of person in certificate, ISO 8601 range",
                        "example": "1979-04-13"
                    },
                    "r": {
                        "title": "R",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QRRecovery"
                        }
                    }
                },
                "description": "The payload for the QR code."
            },
            "ResultEnum": {
                "title": "ResultEnum",
                "enum": [
                    "negative"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "Token": {
                "title": "Token",
                "required": [
                    "access_token",
                    "expires_in",
                    "token_type"
                ],
                "type": "object",
                "properties": {
                    "access_token": {
                        "title": "Access Token",
                        "type": "string"
                    },
                    "expires_in": {
                        "title": "Expires In",
                        "type": "string"
                    },
                    "token_type": {
                        "title": "Token Type",
                        "type": "string"
                    }
                }
            },
            "VaccineQRCode": {
                "title": "VaccineQRCode",
                "required": [
                    "ver",
                    "nam",
                    "dob",
                    "v"
                ],
                "type": "object",
                "properties": {
                    "ver": {
                        "title": "Version",
                        "pattern": "^\\d+.\\d+.\\d+$",
                        "type": "string",
                        "description": "Version of the schema",
                        "example": "1.3.0"
                    },
                    "nam": {
                        "$ref": "#/components/schemas/QRName"
                    },
                    "dob": {
                        "title": "Date Of Birth",
                        "pattern": "^((19|20)\\d\\d(-\\d\\d){0,2}){0,1}$",
                        "type": "string",
                        "description": "Date of birth of person in certificate, ISO 8601 range",
                        "example": "1979-04-13"
                    },
                    "v": {
                        "title": "V",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QRVaccine"
                        }
                    }
                },
                "description": "Schemas for the web application."
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "country_vt": {
                "title": "country_vt",
                "enum": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AQ",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BV",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CC",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IO",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TF",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "disease-agent-targeted": {
                "title": "disease-agent-targeted",
                "enum": [
                    "840539006"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "test-manf": {
                "title": "test-manf",
                "enum": [
                    "308",
                    "344",
                    "345",
                    "768",
                    "770",
                    "1065",
                    "1097",
                    "1114",
                    "1144",
                    "1162",
                    "1173",
                    "1178",
                    "1180",
                    "1190",
                    "1197",
                    "1199",
                    "1201",
                    "1215",
                    "1216",
                    "1218",
                    "1223",
                    "1225",
                    "1232",
                    "1236",
                    "1242",
                    "1243",
                    "1244",
                    "1253",
                    "1257",
                    "1263",
                    "1266",
                    "1267",
                    "1268",
                    "1271",
                    "1278",
                    "1286",
                    "1295",
                    "1296",
                    "1304",
                    "1319",
                    "1324",
                    "1331",
                    "1333",
                    "1341",
                    "1343",
                    "1357",
                    "1360",
                    "1363",
                    "1365",
                    "1375",
                    "1392",
                    "1420",
                    "1437",
                    "1443",
                    "1456",
                    "1457",
                    "1465",
                    "1466",
                    "1468",
                    "1481",
                    "1484",
                    "1485",
                    "1489",
                    "1490",
                    "1494",
                    "1495",
                    "1501",
                    "1574",
                    "1581",
                    "1599",
                    "1604",
                    "1606",
                    "1610",
                    "1618",
                    "1654",
                    "1736",
                    "1739",
                    "1747",
                    "1759",
                    "1762",
                    "1763",
                    "1764",
                    "1767",
                    "1768",
                    "1769",
                    "1773",
                    "1775",
                    "1800",
                    "1815",
                    "1820",
                    "1822",
                    "1833",
                    "1844",
                    "1855",
                    "1870",
                    "1884",
                    "1906",
                    "1919",
                    "1920",
                    "1934",
                    "1957",
                    "1967",
                    "1989",
                    "2006",
                    "2010",
                    "2012",
                    "2013",
                    "2017",
                    "2029",
                    "2031",
                    "2035",
                    "2052",
                    "2067",
                    "2072",
                    "2074",
                    "2078",
                    "2079",
                    "2090",
                    "2098",
                    "2101",
                    "2103",
                    "2104",
                    "2107",
                    "2108",
                    "2109",
                    "2116",
                    "2128",
                    "2130",
                    "2139",
                    "2147",
                    "2183",
                    "2200",
                    "2228",
                    "2241",
                    "2242",
                    "2243",
                    "2247",
                    "2290",
                    "2317",
                    "2350"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "test-type": {
                "title": "test-type",
                "enum": [
                    "LP6464-4",
                    "LP217198-3"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "vaccine-mah-manf": {
                "title": "vaccine-mah-manf",
                "enum": [
                    "ORG-100001699",
                    "ORG-100030215",
                    "ORG-100001417",
                    "ORG-100031184",
                    "ORG-100006270",
                    "ORG-100013793",
                    "ORG-100020693",
                    "ORG-100010771",
                    "ORG-100024420",
                    "ORG-100032020",
                    "Gamaleya-Research-Institute",
                    "Vector-Institute",
                    "Sinovac-Biotech",
                    "Bharat-Biotech",
                    "ORG-100001981"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "vaccine-medicinal-product": {
                "title": "vaccine-medicinal-product",
                "enum": [
                    "EU/1/20/1528",
                    "EU/1/20/1507",
                    "EU/1/21/1529",
                    "EU/1/20/1525",
                    "CVnCoV",
                    "Sputnik-V",
                    "Convidecia",
                    "EpiVacCorona",
                    "BBIBP-CorV",
                    "Inactivated-SARS-CoV-2-Vero-Cell",
                    "CoronaVac",
                    "Covaxin",
                    "Covishield"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "vaccine-prophylaxis": {
                "title": "vaccine-prophylaxis",
                "enum": [
                    "1119305005",
                    "1119349007",
                    "J07BX03"
                ],
                "type": "string",
                "description": "An enumeration."
            }
        },
        "securitySchemes": {
            "Auth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}